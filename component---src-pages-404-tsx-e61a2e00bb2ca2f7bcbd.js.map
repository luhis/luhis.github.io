{"version":3,"file":"component---src-pages-404-tsx-e61a2e00bb2ca2f7bcbd.js","mappings":"yNAaA,UAP+BA,IAC7BC,EAAAA,QAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,QAAAA,cAACE,EAAAA,GAAO,KAAC,aACTF,EAAAA,QAAAA,cAAA,SAAG,4DAMA,MAAMG,EAAOA,IAAMH,EAAAA,QAAAA,cAACI,EAAAA,EAAG,CAACC,MAAM,kB,+CC2ErC,IA1B2DC,IAAgB,IAAf,MAAED,GAAOC,EACnE,MAAMC,GAAOC,EAAAA,EAAAA,gBAAc,cAU3B,OACER,EAAAA,QAAAA,cAAAA,EAAAA,QAAAA,SAAA,KACEA,EAAAA,QAAAA,cAAA,QAAMS,KAAK,OACXT,EAAAA,QAAAA,cAAA,aAAQK,IAjECK,EAkEFH,EAAKI,iBAAiBC,gBAAgBC,gBAlED,CAChD,CACEC,KAAM,SACNC,QAAS,mBAEX,CACEC,SAAU,cACVD,QAAS,mDAEX,CACEC,SAAU,WACVD,QAAS,0DAEX,CACEC,SAAU,aACVD,QAAS,UAEX,CACED,KAAM,gBACNC,QAAS,YAEX,CACED,KAAM,eACNC,QAAS,eAEX,CACED,KAAM,OACNC,QAAS,gBAEX,CACED,KAAM,WACNC,QAAS,uCAEX,CACED,KAAM,SACNC,QAAS,eAEX,CACED,KAAM,WACNC,QAAS,2BAEX,CACED,KAAM,iBACNC,QAAS,wDAEX,CACED,KAAM,WACNC,QAASL,EAAaO,OAAOC,QAAS,GAAGC,OAAOC,MAAM,KAAK,MAmBKC,KAAIC,GAChEtB,EAAAA,QAAAA,cAAA,QACEuB,IAAKD,EAAER,KACPE,SAAUM,EAAEN,SACZF,KAAMQ,EAAER,KACRC,QAASO,EAAEP,aAvENL,KA0ER,C","sources":["webpack://gatsby-starter-default/./src/pages/404.tsx","webpack://gatsby-starter-default/./src/components/Head.tsx"],"sourcesContent":["import { Heading } from \"react-bulma-components\";\nimport React from \"react\";\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Head\";\n\nconst NotFoundPage: React.FC = () => (\n  <Layout>\n    <Heading>NOT FOUND</Heading>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n\nexport const Head = () => <SEO title=\"404: Not found\" />;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport React, { FunctionComponent } from \"react\";\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\n\nimport { ImageData } from \"../types/imageData\";\n\nconst metas = (profileImage: IGatsbyImageData) => [\n  {\n    name: `author`,\n    content: \"Matthew McCorry\",\n  },\n  {\n    property: `description`,\n    content: \"C#, F# and TypeScript developer in Brighton, UK\",\n  },\n  {\n    property: `keywords`,\n    content: \"HTML,CSS,XML,JavaScript,TypeScript,F#,C#,.Net,Brighton\",\n  },\n  {\n    property: `geo.region`,\n    content: \"GB-ESX\",\n  },\n  {\n    name: `geo.placename`,\n    content: \"Brighton\",\n  },\n  {\n    name: `geo.position`,\n    content: \"50.82;-0.14\",\n  },\n  {\n    name: `ICBM`,\n    content: \"50.82, -0.14\",\n  },\n  {\n    name: `viewport`,\n    content: \"width=device-width, initial-scale=1\",\n  },\n  {\n    name: \"og:url\",\n    content: \"mccorry.dev\",\n  },\n  {\n    name: \"og:title\",\n    content: \"Matt McCorry's Dev Site\",\n  },\n  {\n    name: \"og:description\",\n    content: \"Contract C# and TypeScript developer in Brighton, UK\",\n  },\n  {\n    name: \"og:image\",\n    content: profileImage.images.sources![0].srcSet.split(\" \")[0],\n  },\n];\n\nconst SEO: FunctionComponent<{ readonly title: string }> = ({ title }) => {\n  const data = useStaticQuery<ImageData>(graphql`\n    {\n      placeholderImage: file(relativePath: { eq: \"profile.jpg\" }) {\n        childImageSharp {\n          gatsbyImageData(width: 300, layout: FIXED)\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <html lang=\"en\" />\n      <title>{title}</title>\n      {metas(data.placeholderImage.childImageSharp.gatsbyImageData).map(m => (\n        <meta\n          key={m.name}\n          property={m.property}\n          name={m.name}\n          content={m.content}\n        />\n      ))}\n    </>\n  );\n};\nexport default SEO;\n"],"names":["NotFoundPage","React","Layout","Heading","Head","SEO","title","_ref","data","useStaticQuery","lang","profileImage","placeholderImage","childImageSharp","gatsbyImageData","name","content","property","images","sources","srcSet","split","map","m","key"],"sourceRoot":""}