{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/BlogTags.tsx","webpack://gatsby-starter-default/./src/pages/blog.tsx"],"names":["tags","Tags","split","map","t","Tag","key","posts","data","blog","title","Columns","Column","isOneQuarter","Title","post","id","Link","to","fields","slug","frontmatter","Subtitle","author","date","excerpt"],"mappings":"6JAWA,IAR6C,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OAC3C,wBAAC,EAAAC,KAAD,KACGD,EAAKE,MAAM,KAAKC,KAAI,SAACC,GAAD,OACnB,wBAAC,EAAAC,IAAD,CAAKC,IAAKF,GAAIA,S,mHCoCpB,UAhC8E,SAAC,GAEzE,IACIG,EADJ,EADJC,KAEuBC,KAAfF,MAER,OACE,wBAAC,IAAD,KACE,wBAAC,IAAD,CAAKG,MAAM,8BACX,wBAAC,EAAAC,QAAD,KACE,wBAAC,EAAAC,OAAD,CAAQC,cAAY,GAClB,wBAAC,IAAD,OAEF,wBAAC,EAAAD,OAAD,KACE,wBAAC,EAAAE,MAAD,mBACCP,EAAMJ,KAAI,SAAAY,GAAI,OACb,mCAAST,IAAKS,EAAKC,IACjB,wBAAC,EAAAC,KAAD,CAAMC,GAAE,QAAUH,EAAKI,OAAOC,MAC5B,wBAAC,EAAAN,MAAD,KAAQC,EAAKM,YAAYX,OACzB,wBAAC,EAAAY,SAAD,KACGP,EAAKM,YAAYE,OADpB,KAC8BR,EAAKM,YAAYG,OAGjD,wBAAC,IAAD,CAAUxB,KAAMe,EAAKM,YAAYrB,OACjC,iCAAIe,EAAKU","file":"component---src-pages-blog-tsx-80ae3abd030e37937471.js","sourcesContent":["import React from \"react\";\nimport { Tag, Tags } from \"trunx\";\n\nconst BlogTags: React.FC<{ tags: string }> = ({ tags }) => (\n  <Tags>\n    {tags.split(\",\").map((t: string) => (\n      <Tag key={t}>{t}</Tag>\n    ))}\n  </Tags>\n);\n\nexport default BlogTags;\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { Column, Columns, Title, Subtitle } from \"trunx\";\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\nimport LeftCol from \"../components/LeftCol\";\nimport BlogTags from \"../components/BlogTags\";\nimport { PostSummary } from \"../types/types\";\n\nconst Blog: React.FC<{ data: { blog: { posts: readonly PostSummary[] } } }> = ({\n  data,\n}) => {\n  const { posts } = data.blog;\n\n  return (\n    <Layout>\n      <SEO title=\"Matt McCorry's Blog Index\" />\n      <Columns>\n        <Column isOneQuarter>\n          <LeftCol />\n        </Column>\n        <Column>\n          <Title>Blog Posts</Title>\n          {posts.map(post => (\n            <article key={post.id}>\n              <Link to={`/blog${post.fields.slug}`}>\n                <Title>{post.frontmatter.title}</Title>\n                <Subtitle>\n                  {post.frontmatter.author}, {post.frontmatter.date}\n                </Subtitle>\n              </Link>\n              <BlogTags tags={post.frontmatter.tags} />\n              <p>{post.excerpt}</p>\n            </article>\n          ))}\n        </Column>\n      </Columns>\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n  query MyQuery {\n    blog: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      posts: nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(fromNow: true)\n          title\n          author\n          tags\n        }\n        excerpt\n        id\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}